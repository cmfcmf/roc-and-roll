// Use the native sans serif fonts on every platform.
//
// Taken from:
// https://getbootstrap.com/docs/5.0/content/reboot/#native-font-stack
$font-family-sans-serif:
  // Cross-platform generic font family (default user interface font)
  system-ui,
  // Safari for macOS and iOS (San Francisco)
  -apple-system,
  // Chrome < 56 for macOS (San Francisco)
  BlinkMacSystemFont,
  // Windows
  "Segoe UI",
  // Android
  Roboto,
  // Basic web fallback
  "Helvetica Neue",
  Arial,
  // Linux
  "Noto Sans",
  "Liberation Sans",
  // Sans serif fallback
  sans-serif,
  // Emoji fonts
  "Apple Color Emoji",
  "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";

// END code from https://getbootstrap.com

// 'Architects Daughter' is included and downloaded by a Google Fonts plugin in
// webpack.client.js. Edit webpack.client.js to change or add new fonts.
//
// We deliberately use a local copy of Google Web Fonts instead of linking them
// directly, so that we avoid having to add a stupid cookie warning.
$font-family-handwritten: "Architects Daughter", cursive;

body,
html,
.root {
  font-family: $font-family-sans-serif;
  height: 100%;
  width: 100%;
}

button {
  background: rgb(239, 239, 239);
}

.root {
  background: #111;
  color: white;
}

.selection-area-highlight {
  stroke: #fff;
  stroke-width: 4px;
}

a {
  color: rgb(255, 166, 0);
}

.app-wrapper {
  display: flex;
  width: 100%;
  height: 100%;
  align-items: stretch;
}

.app-sidebar {
  background: #222;
}

.app-sidebar-scroll-container {
  overflow-y: auto;
  overflow-x: hidden;
  height: 100%;
  padding: 1rem;

  & > div {
    border-top: 1px solid #333;
    border-bottom: 1px solid #333;
  }
}

.app-map {
  position: relative;
  flex-grow: 1;
  display: flex;
}

.map-svg {
  display: block;
  width: 100%;
  height: 100%;
}

.token-list {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
}

.token-image {
  $size: 32px;
  background: #555;
  width: $size;
  height: $size;
  border-radius: $size;
  background-position: center center;
  background-size: cover;
}
.token-preview {
  font-size: 0.8rem;
  margin: 0.25rem;
  display: flex;
  flex-direction: column;
  align-items: center;
  cursor: pointer;

  p {
    text-align: center;
    width: 4rem;
    overflow-wrap: break-word;
  }
}

.token-stack {
  $tokenSize: 32px;
  $offset: 24px;
  $stackWidth: $offset + $tokenSize;

  position: relative;
  width: $stackWidth;
  min-width: $stackWidth;
  height: $tokenSize;
  & > div {
    position: absolute;
    top: 0;
  }
}

// log
.log {
  padding: 5px;
  width: 30vw;
  min-width: 300px;
  background-color: rgba(51, 51, 51, 0.6);
}

.log-text {
  overflow-y: auto;
  max-height: 40vh;
  font-size: 0.8rem;
  padding-left: 17px;
}

.log-title {
  display: flex;
  justify-content: space-between;
}

.collapse-button {
  padding: 0px;
  border: none;
  width: 32px;
  height: 32px;
  border-radius: 32px;
  line-height: 32px;
  background-color: #fff;
  cursor: pointer;
  &:hover {
    background-color: #ccc;
  }
}

.collapsible-header {
  padding: 0.5rem 0;
  display: flex;
  justify-content: space-between;
}

.bottom-floats-wrapper {
  // Set the height to 0, so that it does not (invisibly) overlap the map.
  // Without explicitly setting the height to 0, the following problem arises:
  // Open the chat, but close the log. Now it is impossible to interact with the
  // map to the right of the chat.
  height: auto;

  position: absolute;
  bottom: 0px;
  right: 0px;
  width: 100%;

  display: flex;
  flex-direction: column;

  .bottom-floats-upper {
    display: flex;
    justify-content: flex-end;
    align-items: flex-end;
    padding: 0 4px;

    & > * {
      margin-left: 8px;
    }
  }
}

.dice-templates {
  $animation-duration: 200ms;

  height: 0;
  background: rgb(59, 28, 6);
  box-shadow: inset 0 0 30px black;
  border-top: 1px solid black;
  border-left: 1px solid black;
  width: 100%;
  transition: $animation-duration height;
  display: flex;
  align-items: center;
  justify-content: flex-start;
  padding-left: 8px;
  position: relative;

  &.opened {
    height: 200px;
  }

  .dice-templates-container {
    overflow-y: auto;
    display: flex;
    flex-wrap: wrap;
    height: 100%;
    width: 100%;
    align-items: stretch;
    justify-content: flex-start;
  }

  .dice-template {
    min-height: 80px;
    width: 160px;
    border: 3px dashed #ccc;
    margin: 0.5rem;
    position: relative;
    padding: 0.25rem;
    display: flex;
    flex-wrap: wrap;
    cursor: pointer;

    input {
      background: none;
      border: none;
      box-shadow: none;
      width: 100%;
      color: #fff;
      font-size: 0.8rem;
    }

    &.created {
      border-style: solid;
      border-width: 2px;
    }
    &:not(.created) {
      text-align: center;
      font-style: italic;
      font-size: 0.9rem;
      align-items: center;
      justify-content: center;
    }
  }

  $dice-picker-height: 400px;
  .dice-picker {
    position: absolute;
    left: 12px;
    width: 270px;
    height: 0;
    transition: $animation-duration $animation-duration;
    top: 0;
    background: #333;
    border-radius: 5px 5px 0 0;
    overflow-y: auto;
    display: flex;
    flex-wrap: wrap;
    align-items: flex-start;
    justify-content: flex-start;
    align-content: flex-start;
  }

  &.opened .dice-picker {
    height: $dice-picker-height;
    top: -$dice-picker-height;
  }

  .dice-option {
    width: 40px;
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 5px;
    background: #000;
    margin: 0.25rem;
  }
}

// This is just the CSS for the unopened collapsed chat wrapper.
// The rest of the CSS is located in PrivateChats.scss and only loaded if the
// chat is opened.
.private-chats-wrapper {
  background-color: #333;
  min-width: 200px;
  max-width: 400px;

  .collapsible-header {
    padding: 4px 8px 0;

    small {
      font-size: 0.8rem;
      text-transform: uppercase;
      color: orange;
    }
  }
}

$gmAreaColor: #ab62c0;

.gm-area {
  border: 1px solid $gmAreaColor;
  padding: 4px;
  padding-top: 10px;
  margin-top: 10px;
  position: relative;
  background-color: inherit;

  &::before {
    position: absolute;
    color: $gmAreaColor;
    content: "GM only";
    font-size: 12px;
    text-transform: uppercase;
    top: -9px;
    left: 4px;
    padding: 0 3px;
    background-color: #222;
  }
}

.gm-button {
  background: $gmAreaColor;
  color: white;
}

.initiative-tracker {
  ul {
    margin: 0;
    padding: 0;
    li {
      display: flex;
      justify-content: space-between;
      padding: 0.25rem 0;
      padding-bottom: 0.5rem;
      // we need to set the background color here (instead of inheriting it from
      // the parent, so that the list item has an opaque background when its
      // position is anmiated and it is moved over other list items.
      background: #222;
      // Needed for z-index to work correctly (for some reason).
      // The z-index is applied from React when shuffling the items around.
      // https://stackoverflow.com/a/56238880/2560557
      position: relative;

      p {
        padding: 0 1rem;
        flex-grow: 1;
      }

      input {
        text-align: right;
        width: 3rem;
      }

      &.current {
        background: orange;
      }
    }
  }

  .initiative-tracker-turn-done {
    width: 100%;
    margin-bottom: 1rem;
  }

  .initiative-tracker-roll {
    display: flex;
    justify-content: space-between;
    align-items: center;

    button {
      width: 100%;
    }

    input {
      width: 3rem;
    }
  }

  .initiative-tracker-add-lair-action {
    width: 100%;
  }
}

.your-turn {
  position: fixed;
  display: inline-block;
  top: 1rem;
  left: 50%;
  margin-left: -15vw;
  width: 30vw;
  text-align: center;
  font-size: 2rem;

  background: orange;
}

.map-toolbar {
  position: absolute;
  right: 1rem;
  top: 1rem;
  max-width: 40vw;

  display: flex;
  flex-wrap: wrap;
  justify-content: flex-end;

  button.active {
    font-weight: bold;
  }
}

.rough-text {
  font-family: $font-family-handwritten;
}

.hp-inline-edit {
  @extend .rough-text;
  font-weight: bold;
  font-size: 14px;

  display: block;
  width: 100%;
  height: 14px;
  padding: 0 2px;

  color: black;
  background: transparent;

  text-align: right;
  border: none;
}

.notifications {
  $width: 400px - 18px;
  position: fixed;
  width: $width;
  left: 50%;
  margin-left: $width / -2;

  .notification {
    padding: 1rem;
    background: #333;
    margin-top: 0.5rem;
    border-radius: 3px;

    .player-name {
      display: inline-block;
      background: #fff;
      padding: 0 0.5rem;
      border-radius: 999px;
    }
  }
}

button.color-picker-color {
  width: 2rem;
  height: 2rem;
  padding: 0.25rem;

  div {
    height: 100%;
    border: 1px solid black;
  }
}

.color-picker {
  display: inline-block;

  & > button {
    width: 3rem;
    height: 1.5rem;
  }
}

.color-picker-popover {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  width: 11.99rem;

  input[type="color"] {
    width: 100%;
    height: 2rem;
    margin-bottom: 0.5rem;
  }

  button {
    margin-bottom: 0.5rem;
    width: 2rem;
    height: 2rem;
  }
}

.dice-display {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  margin-top: 0.25rem;

  canvas {
    position: absolute;
  }

  .modifier {
    position: absolute;
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: bold;
    font-size: 1.5rem;
  }

  .dice-display-modifiers {
    position: absolute;
    top: 0;
  }

  .weird-die {
    border: 1px solid #ccc;
    border-radius: 3px;
    position: absolute;
    font-weight: bold;
    align-items: center;
    justify-content: center;
    display: flex;
    background: rgb(240, 205, 12);
    color: #000;
    border-color: #000;

    &.unused {
      background: gray;
    }

    .weird-die-faces {
      font-size: 0.6rem;
      line-height: 1;
      position: absolute;
      right: 2px;
      bottom: 2px;
    }
  }
}
